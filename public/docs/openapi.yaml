openapi: 3.0.3
info:
    title: 'API Documentation - Roomac'
    description: ''
    version: 1.0.0
servers:
    -
        url: 'https://it114118-fyp.herokuapp.com'
paths:
    /api/branches/import:
        post:
            summary: "Import branches\n\nImport branches."
            description: ''
            parameters:
                -
                    in: header
                    name: Content-Type
                    description: ''
                    example: multipart/form-data
                    schema:
                        type: string
                -
                    in: header
                    name: Accept
                    description: ''
                    example: application/json
                    schema:
                        type: string
            responses: {  }
            tags:
                - Branch
            requestBody:
                required: true
                content:
                    multipart/form-data:
                        schema:
                            type: object
                            properties:
                                file:
                                    type: string
                                    format: binary
                                    description: ''
                            required:
                                - file
    /api/branches/export:
        get:
            summary: "Export branches\n\nExport branches."
            description: ''
            parameters:
                -
                    in: query
                    name: format
                    description: 'Define the export format. Accepted: xlsx, csv, tsv, ods, xls, html. Defaults to xlsx.'
                    example: csv
                    required: false
                    schema:
                        type: string
                -
                    in: header
                    name: Content-Type
                    description: ''
                    example: application/json
                    schema:
                        type: string
                -
                    in: header
                    name: Accept
                    description: ''
                    example: application/json
                    schema:
                        type: string
            responses:
                401:
                    description: ''
                    content:
                        application/json:
                            schema:
                                type: object
                                example:
                                    message: Unauthenticated.
                                properties:
                                    message: { type: string, example: Unauthenticated. }
            tags:
                - Branch
    /api/branches:
        delete:
            summary: "Remove multiple branches\n\nRemove multiple branches."
            description: ''
            parameters:
                -
                    in: header
                    name: Content-Type
                    description: ''
                    example: application/json
                    schema:
                        type: string
                -
                    in: header
                    name: Accept
                    description: ''
                    example: application/json
                    schema:
                        type: string
            responses: {  }
            tags:
                - Branch
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            type: object
                            properties:
                                ids:
                                    type: array
                                    description: 'Array of the branches'' id'
                                    example: '{"ids": ["ST", "TY"]}'
                                    items: { type: string }
                            required:
                                - ids
        get:
            summary: "Retrieve all branches\n\nRetrieve all branches."
            description: ''
            parameters:
                -
                    in: header
                    name: Content-Type
                    description: ''
                    example: application/json
                    schema:
                        type: string
                -
                    in: header
                    name: Accept
                    description: ''
                    example: application/json
                    schema:
                        type: string
            responses:
                200:
                    description: ''
                    content:
                        application/json:
                            schema:
                                type: array
                                items:
                                    type: object
                                example:
                                    - { id: CW, title_en: 'Chai Wan', title_hk: 柴灣, title_cn: 柴湾, created_at: '2020-12-14T22:24:30.000000Z', updated_at: '2020-12-14T22:24:30.000000Z' }
                                    - { id: HW, title_en: 'Haking Wong', title_hk: 黃克競, title_cn: 黄克竞, created_at: '2020-12-14T22:24:31.000000Z', updated_at: '2020-12-14T22:24:31.000000Z' }
                                    - { id: KC, title_en: 'Kwai Chung', title_hk: 葵涌, title_cn: 葵涌, created_at: '2020-12-14T22:24:32.000000Z', updated_at: '2020-12-14T22:24:32.000000Z' }
                                    - { id: KT, title_en: 'Kwun Tong', title_hk: 觀塘, title_cn: 观塘, created_at: '2020-12-14T22:24:33.000000Z', updated_at: '2020-12-14T22:24:33.000000Z' }
                                    - { id: LWL, title_en: 'Lee Wai Lee', title_hk: 李惠利, title_cn: 李惠利, created_at: '2020-12-14T22:24:35.000000Z', updated_at: '2020-12-14T22:24:35.000000Z' }
                                    - { id: MH, title_en: 'Morrison Hill', title_hk: 摩理臣山, title_cn: 摩理臣山, created_at: '2020-12-14T22:24:35.000000Z', updated_at: '2020-12-14T22:24:35.000000Z' }
                                    - { id: ST, title_en: 'Sha Tin', title_hk: 沙田, title_cn: 沙田, created_at: '2020-12-14T22:24:36.000000Z', updated_at: '2020-12-14T22:24:36.000000Z' }
                                    - { id: TM, title_en: 'Tuen Mun', title_hk: 屯門, title_cn: 屯门, created_at: '2020-12-14T22:24:38.000000Z', updated_at: '2020-12-14T22:24:38.000000Z' }
                                    - { id: TY, title_en: 'Tsing Yi', title_hk: 青衣, title_cn: 青衣, created_at: '2020-12-14T22:24:37.000000Z', updated_at: '2020-12-14T22:24:37.000000Z' }
            tags:
                - Branch
            security: []
        post:
            summary: "Add a branch\n\nAdd a branch."
            description: ''
            parameters:
                -
                    in: header
                    name: Content-Type
                    description: ''
                    example: application/json
                    schema:
                        type: string
                -
                    in: header
                    name: Accept
                    description: ''
                    example: application/json
                    schema:
                        type: string
            responses: {  }
            tags:
                - Branch
            security: []
    /api/branches/reset:
        delete:
            summary: "Reset branches\n\nRemove all branches."
            description: ''
            parameters:
                -
                    in: header
                    name: Content-Type
                    description: ''
                    example: application/json
                    schema:
                        type: string
                -
                    in: header
                    name: Accept
                    description: ''
                    example: application/json
                    schema:
                        type: string
            responses: {  }
            tags:
                - Branch
    '/api/branches/{branch}':
        get:
            summary: "Retrieve a branch\n\nRetrieve a branch."
            description: ''
            parameters:
                -
                    in: header
                    name: Content-Type
                    description: ''
                    example: application/json
                    schema:
                        type: string
                -
                    in: header
                    name: Accept
                    description: ''
                    example: application/json
                    schema:
                        type: string
            responses:
                200:
                    description: ''
                    content:
                        application/json:
                            schema:
                                type: object
                                example:
                                    id: ST
                                    title_en: 'Sha Tin'
                                    title_hk: 沙田
                                    title_cn: 沙田
                                    created_at: '2020-12-14T22:24:36.000000Z'
                                    updated_at: '2020-12-14T22:24:36.000000Z'
                                properties:
                                    id: { type: string, example: ST }
                                    title_en: { type: string, example: 'Sha Tin' }
                                    title_hk: { type: string, example: 沙田 }
                                    title_cn: { type: string, example: 沙田 }
                                    created_at: { type: string, example: '2020-12-14T22:24:36.000000Z' }
                                    updated_at: { type: string, example: '2020-12-14T22:24:36.000000Z' }
            tags:
                - Branch
            security: []
        put:
            summary: "Update a branch\n\nUpdate a branch."
            description: ''
            parameters:
                -
                    in: header
                    name: Content-Type
                    description: ''
                    example: application/json
                    schema:
                        type: string
                -
                    in: header
                    name: Accept
                    description: ''
                    example: application/json
                    schema:
                        type: string
            responses: {  }
            tags:
                - Branch
            security: []
        delete:
            summary: "Remove a branch\n\nRemove a branch."
            description: ''
            parameters:
                -
                    in: header
                    name: Content-Type
                    description: ''
                    example: application/json
                    schema:
                        type: string
                -
                    in: header
                    name: Accept
                    description: ''
                    example: application/json
                    schema:
                        type: string
            responses: {  }
            tags:
                - Branch
            security: []
        parameters:
            -
                in: path
                name: branch
                description: 'Optional parameter. string required The ID of the branch.'
                required: true
                schema:
                    type: string
                examples:
                    omitted:
                        summary: 'When the value is omitted'
                        value: ''
                    present:
                        summary: 'When the value is present'
                        value: ST
    '/api/branches/{branch}/settings/active':
        get:
            summary: "Retrieve the active branch's settings\n\nRetrieve the active branch's settings."
            description: ''
            parameters:
                -
                    in: header
                    name: Content-Type
                    description: ''
                    example: application/json
                    schema:
                        type: string
                -
                    in: header
                    name: Accept
                    description: ''
                    example: application/json
                    schema:
                        type: string
            responses:
                200:
                    description: ''
                    content:
                        application/json:
                            schema:
                                type: object
                                example:
                                    version: null
                                    name: 'Default Settings'
                                    active_at: null
                                    is_active: true
                                    settings: [{ id: CLOSE_TIME, data_type: TIME, default_value: '20:00:00', created_at: '2020-12-14T22:24:54.000000Z', updated_at: '2020-12-14T22:24:54.000000Z', value: '20:00:00' }, { id: MIN_CLIENT_PER_VENUE, data_type: INTEGER, default_value: '3', created_at: '2020-12-14T22:24:56.000000Z', updated_at: '2020-12-14T22:24:56.000000Z', value: '3' }, { id: MIN_CLIENT_UNLOCK, data_type: INTEGER, default_value: '3', created_at: '2020-12-14T22:24:56.000000Z', updated_at: '2020-12-14T22:24:56.000000Z', value: '3' }, { id: OPEN_TIME, data_type: TIME, default_value: '08:30:00', created_at: '2020-12-14T22:24:53.000000Z', updated_at: '2020-12-14T22:24:53.000000Z', value: '08:30:00' }, { id: TEST_BOOLEAN_FALSE, data_type: BOOLEAN, default_value: '0', created_at: '2020-12-14T22:24:58.000000Z', updated_at: '2020-12-14T22:24:58.000000Z', value: '0' }, { id: TEST_BOOLEAN_TRUE, data_type: BOOLEAN, default_value: '1', created_at: '2020-12-14T22:24:57.000000Z', updated_at: '2020-12-14T22:24:57.000000Z', value: '1' }, { id: TEST_VARCHAR, data_type: VARCHAR, default_value: 'Test String', created_at: '2020-12-14T22:24:57.000000Z', updated_at: '2020-12-14T22:24:57.000000Z', value: 'Test String' }, { id: TIME_IN_ADVANCE, data_type: TIME, default_value: '24:00:00', created_at: '2020-12-14T22:24:54.000000Z', updated_at: '2020-12-14T22:24:54.000000Z', value: '24:00:00' }, { id: TIME_ZONE, data_type: VARCHAR, default_value: Asia/Hong_Kong, created_at: '2020-12-14T22:24:53.000000Z', updated_at: '2020-12-14T22:24:53.000000Z', value: Asia/Hong_Kong }, { id: VENUE_MINUTE_PER_SESSION, data_type: INTEGER, default_value: '30', created_at: '2020-12-14T22:24:55.000000Z', updated_at: '2020-12-14T22:24:55.000000Z', value: '30' }]
                                properties:
                                    version: { type: 'null', example: null }
                                    name: { type: string, example: 'Default Settings' }
                                    active_at: { type: 'null', example: null }
                                    is_active: { type: boolean, example: true }
                                    settings: { type: array, example: [{ id: CLOSE_TIME, data_type: TIME, default_value: '20:00:00', created_at: '2020-12-14T22:24:54.000000Z', updated_at: '2020-12-14T22:24:54.000000Z', value: '20:00:00' }, { id: MIN_CLIENT_PER_VENUE, data_type: INTEGER, default_value: '3', created_at: '2020-12-14T22:24:56.000000Z', updated_at: '2020-12-14T22:24:56.000000Z', value: '3' }, { id: MIN_CLIENT_UNLOCK, data_type: INTEGER, default_value: '3', created_at: '2020-12-14T22:24:56.000000Z', updated_at: '2020-12-14T22:24:56.000000Z', value: '3' }, { id: OPEN_TIME, data_type: TIME, default_value: '08:30:00', created_at: '2020-12-14T22:24:53.000000Z', updated_at: '2020-12-14T22:24:53.000000Z', value: '08:30:00' }, { id: TEST_BOOLEAN_FALSE, data_type: BOOLEAN, default_value: '0', created_at: '2020-12-14T22:24:58.000000Z', updated_at: '2020-12-14T22:24:58.000000Z', value: '0' }, { id: TEST_BOOLEAN_TRUE, data_type: BOOLEAN, default_value: '1', created_at: '2020-12-14T22:24:57.000000Z', updated_at: '2020-12-14T22:24:57.000000Z', value: '1' }, { id: TEST_VARCHAR, data_type: VARCHAR, default_value: 'Test String', created_at: '2020-12-14T22:24:57.000000Z', updated_at: '2020-12-14T22:24:57.000000Z', value: 'Test String' }, { id: TIME_IN_ADVANCE, data_type: TIME, default_value: '24:00:00', created_at: '2020-12-14T22:24:54.000000Z', updated_at: '2020-12-14T22:24:54.000000Z', value: '24:00:00' }, { id: TIME_ZONE, data_type: VARCHAR, default_value: Asia/Hong_Kong, created_at: '2020-12-14T22:24:53.000000Z', updated_at: '2020-12-14T22:24:53.000000Z', value: Asia/Hong_Kong }, { id: VENUE_MINUTE_PER_SESSION, data_type: INTEGER, default_value: '30', created_at: '2020-12-14T22:24:55.000000Z', updated_at: '2020-12-14T22:24:55.000000Z', value: '30' }], items: { type: object } }
            tags:
                - 'Branch Setting'
            security: []
        parameters:
            -
                in: path
                name: branch
                description: 'Optional parameter. string required The ID of the branch.'
                required: true
                schema:
                    type: string
                examples:
                    omitted:
                        summary: 'When the value is omitted'
                        value: ''
                    present:
                        summary: 'When the value is present'
                        value: ST
    '/api/branches/{branch}/settings':
        get:
            summary: "Retrieve all branch's settings versions\n\nRetrieve all branch's settings versions."
            description: ''
            parameters:
                -
                    in: header
                    name: Content-Type
                    description: ''
                    example: application/json
                    schema:
                        type: string
                -
                    in: header
                    name: Accept
                    description: ''
                    example: application/json
                    schema:
                        type: string
            responses:
                200:
                    description: ''
                    content:
                        application/json:
                            schema:
                                type: object
                                example:
                                    active_version: null
                                    versions: [{ version: null, name: 'Default Settings' }]
                                properties:
                                    active_version: { type: 'null', example: null }
                                    versions: { type: array, example: [{ version: null, name: 'Default Settings' }], items: { type: object } }
            tags:
                - 'Branch Setting'
            security: []
        post:
            summary: "Add a new version of branch's settings\n\nAdd a new version of branch's settings"
            description: ''
            parameters:
                -
                    in: query
                    name: name
                    description: 'The name of the setting. Defaults to "New Settings".'
                    example: 'My Special Settings'
                    required: false
                    schema:
                        type: string
                -
                    in: header
                    name: Content-Type
                    description: ''
                    example: application/json
                    schema:
                        type: string
                -
                    in: header
                    name: Accept
                    description: ''
                    example: application/json
                    schema:
                        type: string
            responses: {  }
            tags:
                - 'Branch Setting'
            security: []
        parameters:
            -
                in: path
                name: branch
                description: 'Optional parameter. string required The ID of the branch.'
                required: true
                schema:
                    type: string
                examples:
                    omitted:
                        summary: 'When the value is omitted'
                        value: ''
                    present:
                        summary: 'When the value is present'
                        value: ST
    '/api/branches/{branch}/settings/{version}':
        get:
            summary: "Retrieve a branch's settings by version\n\nRetrieve a branch's settings by version."
            description: ''
            parameters:
                -
                    in: header
                    name: Content-Type
                    description: ''
                    example: application/json
                    schema:
                        type: string
                -
                    in: header
                    name: Accept
                    description: ''
                    example: application/json
                    schema:
                        type: string
            responses:
                200:
                    description: ''
                    content:
                        application/json:
                            schema:
                                type: object
                                example:
                                    version: null
                                    name: 'Default Settings'
                                    active_at: 0
                                    is_active: true
                                    settings: [{ id: CLOSE_TIME, data_type: TIME, default_value: '20:00:00', created_at: '2020-12-14T22:24:54.000000Z', updated_at: '2020-12-14T22:24:54.000000Z', value: '20:00:00' }, { id: MIN_CLIENT_PER_VENUE, data_type: INTEGER, default_value: '3', created_at: '2020-12-14T22:24:56.000000Z', updated_at: '2020-12-14T22:24:56.000000Z', value: '3' }, { id: MIN_CLIENT_UNLOCK, data_type: INTEGER, default_value: '3', created_at: '2020-12-14T22:24:56.000000Z', updated_at: '2020-12-14T22:24:56.000000Z', value: '3' }, { id: OPEN_TIME, data_type: TIME, default_value: '08:30:00', created_at: '2020-12-14T22:24:53.000000Z', updated_at: '2020-12-14T22:24:53.000000Z', value: '08:30:00' }, { id: TEST_BOOLEAN_FALSE, data_type: BOOLEAN, default_value: '0', created_at: '2020-12-14T22:24:58.000000Z', updated_at: '2020-12-14T22:24:58.000000Z', value: '0' }, { id: TEST_BOOLEAN_TRUE, data_type: BOOLEAN, default_value: '1', created_at: '2020-12-14T22:24:57.000000Z', updated_at: '2020-12-14T22:24:57.000000Z', value: '1' }, { id: TEST_VARCHAR, data_type: VARCHAR, default_value: 'Test String', created_at: '2020-12-14T22:24:57.000000Z', updated_at: '2020-12-14T22:24:57.000000Z', value: 'Test String' }, { id: TIME_IN_ADVANCE, data_type: TIME, default_value: '24:00:00', created_at: '2020-12-14T22:24:54.000000Z', updated_at: '2020-12-14T22:24:54.000000Z', value: '24:00:00' }, { id: TIME_ZONE, data_type: VARCHAR, default_value: Asia/Hong_Kong, created_at: '2020-12-14T22:24:53.000000Z', updated_at: '2020-12-14T22:24:53.000000Z', value: Asia/Hong_Kong }, { id: VENUE_MINUTE_PER_SESSION, data_type: INTEGER, default_value: '30', created_at: '2020-12-14T22:24:55.000000Z', updated_at: '2020-12-14T22:24:55.000000Z', value: '30' }]
                                properties:
                                    version: { type: 'null', example: null }
                                    name: { type: string, example: 'Default Settings' }
                                    active_at: { type: integer, example: 0 }
                                    is_active: { type: boolean, example: true }
                                    settings: { type: array, example: [{ id: CLOSE_TIME, data_type: TIME, default_value: '20:00:00', created_at: '2020-12-14T22:24:54.000000Z', updated_at: '2020-12-14T22:24:54.000000Z', value: '20:00:00' }, { id: MIN_CLIENT_PER_VENUE, data_type: INTEGER, default_value: '3', created_at: '2020-12-14T22:24:56.000000Z', updated_at: '2020-12-14T22:24:56.000000Z', value: '3' }, { id: MIN_CLIENT_UNLOCK, data_type: INTEGER, default_value: '3', created_at: '2020-12-14T22:24:56.000000Z', updated_at: '2020-12-14T22:24:56.000000Z', value: '3' }, { id: OPEN_TIME, data_type: TIME, default_value: '08:30:00', created_at: '2020-12-14T22:24:53.000000Z', updated_at: '2020-12-14T22:24:53.000000Z', value: '08:30:00' }, { id: TEST_BOOLEAN_FALSE, data_type: BOOLEAN, default_value: '0', created_at: '2020-12-14T22:24:58.000000Z', updated_at: '2020-12-14T22:24:58.000000Z', value: '0' }, { id: TEST_BOOLEAN_TRUE, data_type: BOOLEAN, default_value: '1', created_at: '2020-12-14T22:24:57.000000Z', updated_at: '2020-12-14T22:24:57.000000Z', value: '1' }, { id: TEST_VARCHAR, data_type: VARCHAR, default_value: 'Test String', created_at: '2020-12-14T22:24:57.000000Z', updated_at: '2020-12-14T22:24:57.000000Z', value: 'Test String' }, { id: TIME_IN_ADVANCE, data_type: TIME, default_value: '24:00:00', created_at: '2020-12-14T22:24:54.000000Z', updated_at: '2020-12-14T22:24:54.000000Z', value: '24:00:00' }, { id: TIME_ZONE, data_type: VARCHAR, default_value: Asia/Hong_Kong, created_at: '2020-12-14T22:24:53.000000Z', updated_at: '2020-12-14T22:24:53.000000Z', value: Asia/Hong_Kong }, { id: VENUE_MINUTE_PER_SESSION, data_type: INTEGER, default_value: '30', created_at: '2020-12-14T22:24:55.000000Z', updated_at: '2020-12-14T22:24:55.000000Z', value: '30' }], items: { type: object } }
            tags:
                - 'Branch Setting'
            security: []
        put:
            summary: "Update a branch's settings by version\n\nUpdate a branch's settings by version."
            description: ''
            parameters:
                -
                    in: query
                    name: name
                    description: 'The new name of the setting.'
                    example: 'My New Settings Name'
                    required: false
                    schema:
                        type: string
                -
                    in: header
                    name: Content-Type
                    description: ''
                    example: application/json
                    schema:
                        type: string
                -
                    in: header
                    name: Accept
                    description: ''
                    example: application/json
                    schema:
                        type: string
            responses:
                200:
                    description: '200, success'
                    content:
                        application/json:
                            schema:
                                type: string
                                example: ''
                401:
                    description: '401, default_version_not_editable'
                    content:
                        application/json:
                            schema:
                                type: string
                                example: ''
                402:
                    description: '402, active_version_not_editable'
                    content:
                        application/json:
                            schema:
                                type: string
                                example: ''
                404:
                    description: '404, version_not_found'
                    content:
                        application/json:
                            schema:
                                type: string
                                example: ''
            tags:
                - 'Branch Setting'
            security: []
        delete:
            summary: "Remove a branch's settings by version\n\nRemove a branch's settings by version."
            description: ''
            parameters:
                -
                    in: header
                    name: Content-Type
                    description: ''
                    example: application/json
                    schema:
                        type: string
                -
                    in: header
                    name: Accept
                    description: ''
                    example: application/json
                    schema:
                        type: string
            responses:
                200:
                    description: '200, success'
                    content:
                        application/json:
                            schema:
                                type: string
                                example: ''
                401:
                    description: '401, default_version_not_editable'
                    content:
                        application/json:
                            schema:
                                type: string
                                example: ''
                402:
                    description: '402, active_version_not_editable'
                    content:
                        application/json:
                            schema:
                                type: string
                                example: ''
                404:
                    description: '404, version_not_found'
                    content:
                        application/json:
                            schema:
                                type: string
                                example: ''
            tags:
                - 'Branch Setting'
            security: []
        parameters:
            -
                in: path
                name: branch
                description: 'Optional parameter. string required The ID of the branch.'
                required: true
                schema:
                    type: string
                examples:
                    omitted:
                        summary: 'When the value is omitted'
                        value: ''
                    present:
                        summary: 'When the value is present'
                        value: ST
            -
                in: path
                name: version
                description: 'Optional parameter. string required The version of the setting.'
                required: true
                schema:
                    type: string
                examples:
                    omitted:
                        summary: 'When the value is omitted'
                        value: ''
                    present:
                        summary: 'When the value is present'
                        value: '0'
    /sanctum/csrf-cookie:
        get:
            summary: 'Return an empty response simply to trigger the storage of the CSRF cookie in the browser.'
            description: ''
            parameters:
                -
                    in: header
                    name: Content-Type
                    description: ''
                    example: application/json
                    schema:
                        type: string
                -
                    in: header
                    name: Accept
                    description: ''
                    example: application/json
                    schema:
                        type: string
            responses: {  }
            tags:
                - Endpoints
            security: []
    /:
        get:
            summary: 'Invoke the controller method.'
            description: ''
            parameters:
                -
                    in: header
                    name: Content-Type
                    description: ''
                    example: application/json
                    schema:
                        type: string
                -
                    in: header
                    name: Accept
                    description: ''
                    example: application/json
                    schema:
                        type: string
            responses:
                302:
                    description: ''
                    content:
                        text/plain:
                            schema:
                                type: string
                                example: "<!DOCTYPE html>\n<html>\n    <head>\n        <meta charset=\"UTF-8\" />\n        <meta http-equiv=\"refresh\" content=\"0;url='/docs/index.html'\" />\n\n        <title>Redirecting to /docs/index.html</title>\n    </head>\n    <body>\n        Redirecting to <a href=\"/docs/index.html\">/docs/index.html</a>.\n    </body>\n</html>"
            tags:
                - Endpoints
            security: []
    /api/login:
        post:
            summary: 'Authenticate a user'
            description: ''
            parameters:
                -
                    in: header
                    name: Content-Type
                    description: ''
                    example: application/json
                    schema:
                        type: string
                -
                    in: header
                    name: Accept
                    description: ''
                    example: application/json
                    schema:
                        type: string
            responses:
                200:
                    description: '200, success'
                    content:
                        text/plain:
                            schema:
                                type: string
                                example: 1|sNt8wF0Zh4oGJ20O22gns0K4bI2HJfkqNZWiKoEX
            tags:
                - Login
            security: []
    /api/logout:
        post:
            summary: 'Logout a user'
            description: ''
            parameters:
                -
                    in: query
                    name: global
                    description: 'When this value is set to true all of the tokens issued to the user will be revoked. Defaults to false.'
                    example: null
                    required: false
                    schema:
                        type: string
                -
                    in: header
                    name: Content-Type
                    description: ''
                    example: application/json
                    schema:
                        type: string
                -
                    in: header
                    name: Accept
                    description: ''
                    example: application/json
                    schema:
                        type: string
            responses: {  }
            tags:
                - Login
    /api/programs/import:
        post:
            summary: "Import programs\n\nImport programs."
            description: ''
            parameters:
                -
                    in: header
                    name: Content-Type
                    description: ''
                    example: multipart/form-data
                    schema:
                        type: string
                -
                    in: header
                    name: Accept
                    description: ''
                    example: application/json
                    schema:
                        type: string
            responses: {  }
            tags:
                - Program
            requestBody:
                required: true
                content:
                    multipart/form-data:
                        schema:
                            type: object
                            properties:
                                file:
                                    type: string
                                    format: binary
                                    description: ''
                            required:
                                - file
    /api/programs/export:
        get:
            summary: "Export programs\n\nExport programs."
            description: ''
            parameters:
                -
                    in: query
                    name: format
                    description: 'Define the export format. Accepted: xlsx, csv, tsv, ods, xls, html. Defaults to xlsx.'
                    example: csv
                    required: false
                    schema:
                        type: string
                -
                    in: header
                    name: Content-Type
                    description: ''
                    example: application/json
                    schema:
                        type: string
                -
                    in: header
                    name: Accept
                    description: ''
                    example: application/json
                    schema:
                        type: string
            responses:
                401:
                    description: ''
                    content:
                        application/json:
                            schema:
                                type: object
                                example:
                                    message: Unauthenticated.
                                properties:
                                    message: { type: string, example: Unauthenticated. }
            tags:
                - Program
    /api/programs:
        delete:
            summary: "Remove multiple programs\n\nRemove multiple programs."
            description: ''
            parameters:
                -
                    in: header
                    name: Content-Type
                    description: ''
                    example: application/json
                    schema:
                        type: string
                -
                    in: header
                    name: Accept
                    description: ''
                    example: application/json
                    schema:
                        type: string
            responses: {  }
            tags:
                - Program
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            type: object
                            properties:
                                ids:
                                    type: array
                                    description: 'Array of the programs'' id'
                                    example: '{"ids": ["IT114118", "IT123456"]}'
                                    items: { type: string }
                            required:
                                - ids
        get:
            summary: "Retrieve all programs\n\nRetrieve all programs."
            description: ''
            parameters:
                -
                    in: header
                    name: Content-Type
                    description: ''
                    example: application/json
                    schema:
                        type: string
                -
                    in: header
                    name: Accept
                    description: ''
                    example: application/json
                    schema:
                        type: string
            responses:
                200:
                    description: ''
                    content:
                        application/json:
                            schema:
                                type: array
                                items:
                                    type: object
                                example:
                                    - { id: CE114301, title_en: 'Higher Diploma in Child Care and Education', title_hk: 幼兒教育高級文憑, title_cn: 幼儿教育高级文凭, created_at: '2020-12-14T22:24:29.000000Z', updated_at: '2020-12-14T22:24:29.000000Z' }
                                    - { id: IT114105, title_en: 'Higher Diploma in Software Engineering', title_hk: 軟件工程高級文憑, title_cn: 软件工程高级文凭, created_at: '2020-12-14T22:24:28.000000Z', updated_at: '2020-12-14T22:24:28.000000Z' }
                                    - { id: IT114118, title_en: 'Higher Diploma in AI and Mobile Applications Development', title_hk: 人工智能及手機軟件開發高級文憑, title_cn: 人工智能及手机软件开发高级文凭, created_at: '2020-12-14T22:24:27.000000Z', updated_at: '2020-12-14T22:24:27.000000Z' }
            tags:
                - Program
            security: []
        post:
            summary: "Add a program\n\nAdd a program."
            description: ''
            parameters:
                -
                    in: header
                    name: Content-Type
                    description: ''
                    example: application/json
                    schema:
                        type: string
                -
                    in: header
                    name: Accept
                    description: ''
                    example: application/json
                    schema:
                        type: string
            responses: {  }
            tags:
                - Program
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            type: object
                            properties:
                                id:
                                    type: string
                                    description: 'The ID of the program.'
                                    example: IT114118
                                title_en:
                                    type: string
                                    description: 'Title of the program in English.'
                                    example: 'Higher Diploma in AI and Mobile Applications Development'
                                title_hk:
                                    type: string
                                    description: 'Title of the program in Traditional Chinese.'
                                    example: 人工智能及手機軟件開發高級文憑
                                title_cn:
                                    type: string
                                    description: 'Title of the program in Simplified Chinese.'
                                    example: 人工智能及手机软件开发高级文凭
                            required:
                                - id
                                - title_en
                                - title_hk
                                - title_cn
    /api/programs/reset:
        delete:
            summary: "Reset programs\n\nRemove all programs."
            description: ''
            parameters:
                -
                    in: header
                    name: Content-Type
                    description: ''
                    example: application/json
                    schema:
                        type: string
                -
                    in: header
                    name: Accept
                    description: ''
                    example: application/json
                    schema:
                        type: string
            responses: {  }
            tags:
                - Program
    '/api/programs/{program}':
        get:
            summary: "Retrieve a program\n\nRetrieve a program."
            description: ''
            parameters:
                -
                    in: header
                    name: Content-Type
                    description: ''
                    example: application/json
                    schema:
                        type: string
                -
                    in: header
                    name: Accept
                    description: ''
                    example: application/json
                    schema:
                        type: string
            responses:
                200:
                    description: ''
                    content:
                        application/json:
                            schema:
                                type: object
                                example:
                                    id: IT114118
                                    title_en: 'Higher Diploma in AI and Mobile Applications Development'
                                    title_hk: 人工智能及手機軟件開發高級文憑
                                    title_cn: 人工智能及手机软件开发高级文凭
                                    created_at: '2020-12-14T22:24:27.000000Z'
                                    updated_at: '2020-12-14T22:24:27.000000Z'
                                properties:
                                    id: { type: string, example: IT114118 }
                                    title_en: { type: string, example: 'Higher Diploma in AI and Mobile Applications Development' }
                                    title_hk: { type: string, example: 人工智能及手機軟件開發高級文憑 }
                                    title_cn: { type: string, example: 人工智能及手机软件开发高级文凭 }
                                    created_at: { type: string, example: '2020-12-14T22:24:27.000000Z' }
                                    updated_at: { type: string, example: '2020-12-14T22:24:27.000000Z' }
            tags:
                - Program
            security: []
        put:
            summary: "Update a program\n\nUpdate a program."
            description: ''
            parameters:
                -
                    in: header
                    name: Content-Type
                    description: ''
                    example: application/json
                    schema:
                        type: string
                -
                    in: header
                    name: Accept
                    description: ''
                    example: application/json
                    schema:
                        type: string
            responses: {  }
            tags:
                - Program
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            type: object
                            properties:
                                title_en:
                                    type: string
                                    description: 'Title of the program in English.'
                                    example: 'Higher Diploma in AI and Mobile Applications Development'
                                title_hk:
                                    type: string
                                    description: 'Title of the program in Traditional Chinese.'
                                    example: 人工智能及手機軟件開發高級文憑
                                title_cn:
                                    type: string
                                    description: 'Title of the program in Simplified Chinese.'
                                    example: 人工智能及手机软件开发高级文凭
                            required:
                                - title_en
                                - title_hk
                                - title_cn
        delete:
            summary: "Remove a program\n\nRemove a program."
            description: ''
            parameters:
                -
                    in: header
                    name: Content-Type
                    description: ''
                    example: application/json
                    schema:
                        type: string
                -
                    in: header
                    name: Accept
                    description: ''
                    example: application/json
                    schema:
                        type: string
            responses: {  }
            tags:
                - Program
        parameters:
            -
                in: path
                name: program
                description: 'Optional parameter. string required The ID of the program.'
                required: true
                schema:
                    type: string
                examples:
                    omitted:
                        summary: 'When the value is omitted'
                        value: ''
                    present:
                        summary: 'When the value is present'
                        value: IT114118
    /api/settings:
        get:
            summary: "Retrieve all settings\n\nRetrieve all settings."
            description: ''
            parameters:
                -
                    in: header
                    name: Content-Type
                    description: ''
                    example: application/json
                    schema:
                        type: string
                -
                    in: header
                    name: Accept
                    description: ''
                    example: application/json
                    schema:
                        type: string
            responses:
                200:
                    description: ''
                    content:
                        application/json:
                            schema:
                                type: array
                                items:
                                    type: object
                                example:
                                    - { id: CLOSE_TIME, data_type: TIME, default_value: '20:00:00', created_at: '2020-12-14T22:24:54.000000Z', updated_at: '2020-12-14T22:24:54.000000Z' }
                                    - { id: MIN_CLIENT_PER_VENUE, data_type: INTEGER, default_value: '3', created_at: '2020-12-14T22:24:56.000000Z', updated_at: '2020-12-14T22:24:56.000000Z' }
                                    - { id: MIN_CLIENT_UNLOCK, data_type: INTEGER, default_value: '3', created_at: '2020-12-14T22:24:56.000000Z', updated_at: '2020-12-14T22:24:56.000000Z' }
                                    - { id: OPEN_TIME, data_type: TIME, default_value: '08:30:00', created_at: '2020-12-14T22:24:53.000000Z', updated_at: '2020-12-14T22:24:53.000000Z' }
                                    - { id: TEST_BOOLEAN_FALSE, data_type: BOOLEAN, default_value: false, created_at: '2020-12-14T22:24:58.000000Z', updated_at: '2020-12-14T22:24:58.000000Z' }
                                    - { id: TEST_BOOLEAN_TRUE, data_type: BOOLEAN, default_value: true, created_at: '2020-12-14T22:24:57.000000Z', updated_at: '2020-12-14T22:24:57.000000Z' }
                                    - { id: TEST_VARCHAR, data_type: VARCHAR, default_value: 'Test String', created_at: '2020-12-14T22:24:57.000000Z', updated_at: '2020-12-14T22:24:57.000000Z' }
                                    - { id: TIME_IN_ADVANCE, data_type: TIME, default_value: '24:00:00', created_at: '2020-12-14T22:24:54.000000Z', updated_at: '2020-12-14T22:24:54.000000Z' }
                                    - { id: TIME_ZONE, data_type: VARCHAR, default_value: Asia/Hong_Kong, created_at: '2020-12-14T22:24:53.000000Z', updated_at: '2020-12-14T22:24:53.000000Z' }
                                    - { id: VENUE_MINUTE_PER_SESSION, data_type: INTEGER, default_value: '30', created_at: '2020-12-14T22:24:55.000000Z', updated_at: '2020-12-14T22:24:55.000000Z' }
            tags:
                - Setting
            security: []
    '/api/settings/{setting}':
        get:
            summary: "Retrieve a settings\n\nRetrieve a settings."
            description: ''
            parameters:
                -
                    in: header
                    name: Content-Type
                    description: ''
                    example: application/json
                    schema:
                        type: string
                -
                    in: header
                    name: Accept
                    description: ''
                    example: application/json
                    schema:
                        type: string
            responses:
                200:
                    description: ''
                    content:
                        application/json:
                            schema:
                                type: object
                                example:
                                    id: OPEN_TIME
                                    data_type: TIME
                                    default_value: '08:30:00'
                                    created_at: '2020-12-14T22:24:53.000000Z'
                                    updated_at: '2020-12-14T22:24:53.000000Z'
                                properties:
                                    id: { type: string, example: OPEN_TIME }
                                    data_type: { type: string, example: TIME }
                                    default_value: { type: string, example: '08:30:00' }
                                    created_at: { type: string, example: '2020-12-14T22:24:53.000000Z' }
                                    updated_at: { type: string, example: '2020-12-14T22:24:53.000000Z' }
            tags:
                - Setting
            security: []
        parameters:
            -
                in: path
                name: setting
                description: 'Optional parameter. string required The ID of the setting.'
                required: true
                schema:
                    type: string
                examples:
                    omitted:
                        summary: 'When the value is omitted'
                        value: ''
                    present:
                        summary: 'When the value is present'
                        value: OPEN_TIME
    /api/users/me:
        get:
            summary: "Get myself\n\nGet current account informations with permissions."
            description: ''
            parameters:
                -
                    in: header
                    name: Content-Type
                    description: ''
                    example: application/json
                    schema:
                        type: string
                -
                    in: header
                    name: Accept
                    description: ''
                    example: application/json
                    schema:
                        type: string
            responses:
                200:
                    description: '200, success'
                    content:
                        application/json:
                            schema:
                                type: object
                                example:
                                    id: 2
                                    name: '190189768'
                                    email: 190189768@stu.vtc.edu.hk
                                    program_id: CE114301
                                    branch_id: CW
                                    first_name: 'Pui Tat'
                                    last_name: Tse
                                    chinese_name: 謝沛達
                                    created_at: '2020-11-01T09:00:22.000000Z'
                                    updated_at: '2020-11-01T09:00:22.000000Z'
                                    deleted_at: null
                                    permissions: [{ name: 'login:admin', granted: true, role: root }, { name: 'create:roles', granted: true, role: root }, { name: 'update:roles', granted: true, role: root }, { name: 'delete:roles', granted: true, role: root }, { name: 'grant:roles', granted: true, role: root }, { name: 'revoke:roles', granted: true, role: root }, { name: 'create:programs', granted: true, role: root }, { name: 'update:programs', granted: true, role: root }, { name: 'delete:programs', granted: true, role: root }, { name: 'create:branches', granted: true, role: root }, { name: 'update:branches', granted: true, role: root }, { name: 'delete:branches', granted: true, role: root }, { name: 'create:users', granted: true, role: root }, { name: 'update:users', granted: true, role: root }, { name: 'delete:users', granted: true, role: root }, { name: 'grant:permissions', granted: true, role: root }, { name: 'revoke:permissions', granted: true, role: root }]
                                properties:
                                    id: { type: integer, example: 2 }
                                    name: { type: string, example: '190189768' }
                                    email: { type: string, example: 190189768@stu.vtc.edu.hk }
                                    program_id: { type: string, example: CE114301 }
                                    branch_id: { type: string, example: CW }
                                    first_name: { type: string, example: 'Pui Tat' }
                                    last_name: { type: string, example: Tse }
                                    chinese_name: { type: string, example: 謝沛達 }
                                    created_at: { type: string, example: '2020-11-01T09:00:22.000000Z' }
                                    updated_at: { type: string, example: '2020-11-01T09:00:22.000000Z' }
                                    deleted_at: { type: 'null', example: null }
                                    permissions: { type: array, example: [{ name: 'login:admin', granted: true, role: root }, { name: 'create:roles', granted: true, role: root }, { name: 'update:roles', granted: true, role: root }, { name: 'delete:roles', granted: true, role: root }, { name: 'grant:roles', granted: true, role: root }, { name: 'revoke:roles', granted: true, role: root }, { name: 'create:programs', granted: true, role: root }, { name: 'update:programs', granted: true, role: root }, { name: 'delete:programs', granted: true, role: root }, { name: 'create:branches', granted: true, role: root }, { name: 'update:branches', granted: true, role: root }, { name: 'delete:branches', granted: true, role: root }, { name: 'create:users', granted: true, role: root }, { name: 'update:users', granted: true, role: root }, { name: 'delete:users', granted: true, role: root }, { name: 'grant:permissions', granted: true, role: root }, { name: 'revoke:permissions', granted: true, role: root }], items: { type: object } }
            tags:
                - User
    /api/users/import:
        post:
            summary: "Import users\n\nImport users."
            description: ''
            parameters:
                -
                    in: header
                    name: Content-Type
                    description: ''
                    example: multipart/form-data
                    schema:
                        type: string
                -
                    in: header
                    name: Accept
                    description: ''
                    example: application/json
                    schema:
                        type: string
            responses: {  }
            tags:
                - User
            requestBody:
                required: true
                content:
                    multipart/form-data:
                        schema:
                            type: object
                            properties:
                                file:
                                    type: string
                                    format: binary
                                    description: ''
                            required:
                                - file
    /api/users/export:
        get:
            summary: "Export users\n\nExport users."
            description: ''
            parameters:
                -
                    in: query
                    name: format
                    description: 'Define the export format. Accepted: xlsx, csv, tsv, ods, xls, html. Defaults to xlsx.'
                    example: csv
                    required: false
                    schema:
                        type: string
                -
                    in: header
                    name: Content-Type
                    description: ''
                    example: application/json
                    schema:
                        type: string
                -
                    in: header
                    name: Accept
                    description: ''
                    example: application/json
                    schema:
                        type: string
            responses:
                401:
                    description: ''
                    content:
                        application/json:
                            schema:
                                type: object
                                example:
                                    message: Unauthenticated.
                                properties:
                                    message: { type: string, example: Unauthenticated. }
            tags:
                - User
    /api/users:
        delete:
            summary: "Remove multiple users\n\nRemove multiple users."
            description: ''
            parameters:
                -
                    in: header
                    name: Content-Type
                    description: ''
                    example: application/json
                    schema:
                        type: string
                -
                    in: header
                    name: Accept
                    description: ''
                    example: application/json
                    schema:
                        type: string
            responses: {  }
            tags:
                - User
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            type: object
                            properties:
                                ids:
                                    type: array
                                    description: 'Array of the users'' id'
                                    example: '{"ids": [1, 2]}'
                                    items: { type: string }
                            required:
                                - ids
        get:
            summary: "Retrieve all users\n\nRetrieve all users."
            description: ''
            parameters:
                -
                    in: header
                    name: Content-Type
                    description: ''
                    example: application/json
                    schema:
                        type: string
                -
                    in: header
                    name: Accept
                    description: ''
                    example: application/json
                    schema:
                        type: string
            responses:
                200:
                    description: '200, success'
                    content:
                        application/json:
                            schema:
                                type: array
                                items:
                                    type: object
                                example:
                                    - { id: 1, name: '190189768', email: 190189768@stu.vtc.edu.hk, permission: '1', program_id: IT114118, branch_id: ST, first_name: Tat, last_name: Chan, chinese_name: 何世, created_at: '2020-10-07T17:44:37.000000Z', updated_at: '2020-10-09T06:31:23.000000Z', deleted_at: null }
                                    - { id: 6, name: '190271174', email: 190271174@stu.vtc.edu.hk, permission: '1', program_id: IT114118, branch_id: ST, first_name: 'Wing Kit', last_name: To, chinese_name: 'CHinese name', created_at: '2020-10-09T06:42:02.000000Z', updated_at: '2020-10-09T06:42:02.000000Z', deleted_at: null }
            tags:
                - User
        post:
            summary: "Add a user\n\nAdd a user."
            description: ''
            parameters:
                -
                    in: header
                    name: Content-Type
                    description: ''
                    example: application/json
                    schema:
                        type: string
                -
                    in: header
                    name: Accept
                    description: ''
                    example: application/json
                    schema:
                        type: string
            responses: {  }
            tags:
                - User
    /api/users/reset:
        delete:
            summary: "Reset users\n\nRemove all users."
            description: ''
            parameters:
                -
                    in: header
                    name: Content-Type
                    description: ''
                    example: application/json
                    schema:
                        type: string
                -
                    in: header
                    name: Accept
                    description: ''
                    example: application/json
                    schema:
                        type: string
            responses: {  }
            tags:
                - User
    '/api/users/{user}':
        get:
            summary: "Retrieve a user\n\nRetrieve a user."
            description: ''
            parameters:
                -
                    in: header
                    name: Content-Type
                    description: ''
                    example: application/json
                    schema:
                        type: string
                -
                    in: header
                    name: Accept
                    description: ''
                    example: application/json
                    schema:
                        type: string
            responses:
                401:
                    description: ''
                    content:
                        application/json:
                            schema:
                                type: object
                                example:
                                    message: Unauthenticated.
                                properties:
                                    message: { type: string, example: Unauthenticated. }
            tags:
                - User
        put:
            summary: "Update a user\n\nUpdate a user."
            description: ''
            parameters:
                -
                    in: header
                    name: Content-Type
                    description: ''
                    example: application/json
                    schema:
                        type: string
                -
                    in: header
                    name: Accept
                    description: ''
                    example: application/json
                    schema:
                        type: string
            responses: {  }
            tags:
                - User
        delete:
            summary: "Remove a user\n\nRemove a user."
            description: ''
            parameters:
                -
                    in: header
                    name: Content-Type
                    description: ''
                    example: application/json
                    schema:
                        type: string
                -
                    in: header
                    name: Accept
                    description: ''
                    example: application/json
                    schema:
                        type: string
            responses: {  }
            tags:
                - User
    '/api/users/{user}/permissions':
        get:
            summary: "Get a user's permissions\n\nRetrieve all permissions associated with the user."
            description: ''
            parameters:
                -
                    in: header
                    name: Content-Type
                    description: ''
                    example: application/json
                    schema:
                        type: string
                -
                    in: header
                    name: Accept
                    description: ''
                    example: application/json
                    schema:
                        type: string
            responses:
                200:
                    description: '200, success'
                    content:
                        application/json:
                            schema:
                                type: array
                                items:
                                    type: object
                                example:
                                    - { name: 'create:roles', granted: true, role: null }
                                    - { name: 'update:roles', granted: true, role: null }
                                    - { name: 'delete:roles', granted: false, role: null }
                                    - { name: 'grant:roles', granted: false, role: null }
                                    - { name: 'revoke:roles', granted: false, role: null }
                                    - { name: 'create:programs', granted: true, role: 'Custom Create' }
                                    - { name: 'update:programs', granted: true, role: null }
                                    - { name: 'delete:programs', granted: false, role: null }
                                    - { name: 'create:branches', granted: true, role: 'Custom Create' }
                                    - { name: 'update:branches', granted: false, role: null }
                                    - { name: 'delete:branches', granted: false, role: null }
                                    - { name: 'create:users', granted: true, role: 'Custom Create' }
                                    - { name: 'update:users', granted: true, role: 'User Admin' }
                                    - { name: 'delete:users', granted: true, role: 'User Admin' }
                                    - { name: 'grant:permissions', granted: false, role: null }
                                    - { name: 'revoke:permissions', granted: false, role: null }
            tags:
                - User
        post:
            summary: "Update permissions from a user\n\nUpdate permissions from a user."
            description: ''
            parameters:
                -
                    in: header
                    name: Content-Type
                    description: ''
                    example: application/json
                    schema:
                        type: string
                -
                    in: header
                    name: Accept
                    description: ''
                    example: application/json
                    schema:
                        type: string
            responses:
                200:
                    description: '200, success'
                    content:
                        application/json:
                            schema:
                                type: array
                                items:
                                    type: object
                                example:
                                    - { name: 'create:roles', granted: true, role: null }
                                    - { name: 'update:roles', granted: true, role: null }
                                    - { name: 'delete:roles', granted: false, role: null }
                                    - { name: 'grant:roles', granted: false, role: null }
                                    - { name: 'revoke:roles', granted: false, role: null }
                                    - { name: 'create:programs', granted: true, role: 'Custom Create' }
                                    - { name: 'update:programs', granted: true, role: null }
                                    - { name: 'delete:programs', granted: false, role: null }
                                    - { name: 'create:branches', granted: true, role: 'Custom Create' }
                                    - { name: 'update:branches', granted: false, role: null }
                                    - { name: 'delete:branches', granted: false, role: null }
                                    - { name: 'create:users', granted: true, role: 'Custom Create' }
                                    - { name: 'update:users', granted: true, role: 'User Admin' }
                                    - { name: 'delete:users', granted: true, role: 'User Admin' }
                                    - { name: 'grant:permissions', granted: false, role: null }
                                    - { name: 'revoke:permissions', granted: false, role: null }
                401:
                    description: '401, not_exist'
                    content:
                        application/json:
                            schema:
                                type: object
                                example:
                                    not_exist: ['create:roless', 'update:rolex']
                                properties:
                                    not_exist: { type: array, example: ['create:roless', 'update:rolex'], items: { type: string } }
            tags:
                - User
            requestBody:
                required: false
                content:
                    application/json:
                        schema:
                            type: object
                            properties:
                                'create:roles':
                                    type: boolean
                                    description: ''
                                    example: true
                                'update:roles':
                                    type: boolean
                                    description: ''
                                    example: true
                                'delete:roles':
                                    type: boolean
                                    description: ''
                                    example: true
    /api/venues/import:
        post:
            summary: "Import venues\n\nImport venues."
            description: ''
            parameters:
                -
                    in: header
                    name: Content-Type
                    description: ''
                    example: multipart/form-data
                    schema:
                        type: string
                -
                    in: header
                    name: Accept
                    description: ''
                    example: application/json
                    schema:
                        type: string
            responses: {  }
            tags:
                - Venue
            requestBody:
                required: true
                content:
                    multipart/form-data:
                        schema:
                            type: object
                            properties:
                                file:
                                    type: string
                                    format: binary
                                    description: ''
                            required:
                                - file
    /api/venues/export:
        get:
            summary: "Export venues\n\nExport venues."
            description: ''
            parameters:
                -
                    in: query
                    name: format
                    description: 'Define the export format. Accepted: xlsx, csv, tsv, ods, xls, html. Defaults to xlsx.'
                    example: csv
                    required: false
                    schema:
                        type: string
                -
                    in: header
                    name: Content-Type
                    description: ''
                    example: application/json
                    schema:
                        type: string
                -
                    in: header
                    name: Accept
                    description: ''
                    example: application/json
                    schema:
                        type: string
            responses:
                401:
                    description: ''
                    content:
                        application/json:
                            schema:
                                type: object
                                example:
                                    message: Unauthenticated.
                                properties:
                                    message: { type: string, example: Unauthenticated. }
            tags:
                - Venue
    /api/venues:
        delete:
            summary: "Remove multiple venues\n\nRemove multiple venues."
            description: ''
            parameters:
                -
                    in: header
                    name: Content-Type
                    description: ''
                    example: application/json
                    schema:
                        type: string
                -
                    in: header
                    name: Accept
                    description: ''
                    example: application/json
                    schema:
                        type: string
            responses: {  }
            tags:
                - Venue
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            type: object
                            properties:
                                ids:
                                    type: array
                                    description: 'Array of the venues'' id'
                                    example: '{"ids": [1, 2]}'
                                    items: { type: string }
                            required:
                                - ids
        get:
            summary: "Retrieve all venues\n\nRetrieve all venues."
            description: ''
            parameters:
                -
                    in: header
                    name: Content-Type
                    description: ''
                    example: application/json
                    schema:
                        type: string
                -
                    in: header
                    name: Accept
                    description: ''
                    example: application/json
                    schema:
                        type: string
            responses:
                200:
                    description: ''
                    content:
                        application/json:
                            schema:
                                type: array
                                items:
                                    type: object
                                example:
                                    - { id: 1, branch_id: ST, number: IT-421B, title_en: '', title_hk: '', title_cn: '', opening_time: '08:00:00', closing_time: '21:00:00', created_at: '2020-12-14T22:24:40.000000Z', updated_at: '2020-12-14T22:24:40.000000Z' }
                                    - { id: 2, branch_id: ST, number: CS-442, title_en: '', title_hk: '', title_cn: '', opening_time: '08:00:00', closing_time: '21:00:00', created_at: '2020-12-14T22:24:41.000000Z', updated_at: '2020-12-14T22:24:41.000000Z' }
                                    - { id: 3, branch_id: ST, number: CS-404, title_en: '', title_hk: '', title_cn: '', opening_time: '08:00:00', closing_time: '21:00:00', created_at: '2020-12-14T22:24:42.000000Z', updated_at: '2020-12-14T22:24:42.000000Z' }
                                    - { id: 4, branch_id: ST, number: CS-332B, title_en: '', title_hk: '', title_cn: '', opening_time: '08:00:00', closing_time: '21:00:00', created_at: '2020-12-14T22:24:42.000000Z', updated_at: '2020-12-14T22:24:42.000000Z' }
                                    - { id: 5, branch_id: ST, number: CS-N108B, title_en: '', title_hk: '', title_cn: '', opening_time: '08:00:00', closing_time: '21:00:00', created_at: '2020-12-14T22:24:43.000000Z', updated_at: '2020-12-14T22:24:43.000000Z' }
                                    - { id: 6, branch_id: ST, number: IT-427B, title_en: '', title_hk: '', title_cn: '', opening_time: '08:00:00', closing_time: '21:00:00', created_at: '2020-12-14T22:24:45.000000Z', updated_at: '2020-12-14T22:24:45.000000Z' }
                                    - { id: 7, branch_id: ST, number: IT-417A, title_en: 'Interview Room', title_hk: 接見室, title_cn: 接见室, opening_time: '08:00:00', closing_time: '15:00:00', created_at: '2020-12-14T22:24:46.000000Z', updated_at: '2020-12-14T22:24:46.000000Z' }
            tags:
                - Venue
            security: []
        post:
            summary: "Add a venue\n\nAdd a venue."
            description: ''
            parameters:
                -
                    in: header
                    name: Content-Type
                    description: ''
                    example: application/json
                    schema:
                        type: string
                -
                    in: header
                    name: Accept
                    description: ''
                    example: application/json
                    schema:
                        type: string
            responses: {  }
            tags:
                - Venue
            security: []
    /api/venues/reset:
        delete:
            summary: "Reset venues\n\nRemove all venues."
            description: ''
            parameters:
                -
                    in: header
                    name: Content-Type
                    description: ''
                    example: application/json
                    schema:
                        type: string
                -
                    in: header
                    name: Accept
                    description: ''
                    example: application/json
                    schema:
                        type: string
            responses: {  }
            tags:
                - Venue
    '/api/venues/{venue}':
        get:
            summary: "Retrieve a venue\n\nRetrieve a venue."
            description: ''
            parameters:
                -
                    in: header
                    name: Content-Type
                    description: ''
                    example: application/json
                    schema:
                        type: string
                -
                    in: header
                    name: Accept
                    description: ''
                    example: application/json
                    schema:
                        type: string
            responses:
                200:
                    description: ''
                    content:
                        application/json:
                            schema:
                                type: object
                                example:
                                    id: 1
                                    branch_id: ST
                                    number: IT-421B
                                    title_en: ''
                                    title_hk: ''
                                    title_cn: ''
                                    opening_time: '08:00:00'
                                    closing_time: '21:00:00'
                                    created_at: '2020-12-14T22:24:40.000000Z'
                                    updated_at: '2020-12-14T22:24:40.000000Z'
                                properties:
                                    id: { type: integer, example: 1 }
                                    branch_id: { type: string, example: ST }
                                    number: { type: string, example: IT-421B }
                                    title_en: { type: string, example: '' }
                                    title_hk: { type: string, example: '' }
                                    title_cn: { type: string, example: '' }
                                    opening_time: { type: string, example: '08:00:00' }
                                    closing_time: { type: string, example: '21:00:00' }
                                    created_at: { type: string, example: '2020-12-14T22:24:40.000000Z' }
                                    updated_at: { type: string, example: '2020-12-14T22:24:40.000000Z' }
            tags:
                - Venue
            security: []
        put:
            summary: "Update a venue\n\nUpdate a venue."
            description: ''
            parameters:
                -
                    in: header
                    name: Content-Type
                    description: ''
                    example: application/json
                    schema:
                        type: string
                -
                    in: header
                    name: Accept
                    description: ''
                    example: application/json
                    schema:
                        type: string
            responses: {  }
            tags:
                - Venue
            security: []
        delete:
            summary: "Remove a venue\n\nRemove a venue."
            description: ''
            parameters:
                -
                    in: header
                    name: Content-Type
                    description: ''
                    example: application/json
                    schema:
                        type: string
                -
                    in: header
                    name: Accept
                    description: ''
                    example: application/json
                    schema:
                        type: string
            responses: {  }
            tags:
                - Venue
            security: []
        parameters:
            -
                in: path
                name: venue
                description: 'Optional parameter. string required The ID of the venue.'
                required: true
                schema:
                    type: string
                examples:
                    omitted:
                        summary: 'When the value is omitted'
                        value: ''
                    present:
                        summary: 'When the value is present'
                        value: '1'
    '/api/venues/{venue}/bookings':
        get:
            summary: 'Retrieve all venue''s bookings timetable'
            description: ''
            parameters:
                -
                    in: header
                    name: Content-Type
                    description: ''
                    example: application/json
                    schema:
                        type: string
                -
                    in: header
                    name: Accept
                    description: ''
                    example: application/json
                    schema:
                        type: string
            responses:
                200:
                    description: '200, success'
                    content:
                        application/json:
                            schema:
                                type: object
                                example:
                                    interval: 30
                                    timezone: Asia/Hong_Kong
                                    opening_time: '08:00:00'
                                    closing_time: '21:00:00'
                                    bookings: { allow_times: [{ id: 1, venue_id: 1, start_time: '2020-12-14T04:00:00.000000Z', end_time: '2020-12-14T21:00:00.000000Z', day_of_week: 1, repeat: 1, created_at: '2020-12-14T22:25:00.000000Z', updated_at: '2020-12-14T22:25:00.000000Z' }, { id: 2, venue_id: 1, start_time: '2020-12-14T00:30:00.000000Z', end_time: '2020-12-14T22:00:00.000000Z', day_of_week: 2, repeat: 1, created_at: '2020-12-14T22:25:00.000000Z', updated_at: '2020-12-14T22:25:00.000000Z' }, { id: 3, venue_id: 1, start_time: '2020-12-14T00:30:00.000000Z', end_time: '2020-12-14T22:00:00.000000Z', day_of_week: 3, repeat: 1, created_at: '2020-12-14T22:25:01.000000Z', updated_at: '2020-12-14T22:25:01.000000Z' }, { id: 4, venue_id: 1, start_time: '2020-12-14T00:30:00.000000Z', end_time: '2020-12-14T22:00:00.000000Z', day_of_week: 4, repeat: 1, created_at: '2020-12-14T22:25:01.000000Z', updated_at: '2020-12-14T22:25:01.000000Z' }, { id: 5, venue_id: 1, start_time: '2020-12-14T00:30:00.000000Z', end_time: '2020-12-14T22:00:00.000000Z', day_of_week: 5, repeat: 1, created_at: '2020-12-14T22:25:02.000000Z', updated_at: '2020-12-14T22:25:02.000000Z' }], unavailable: { booked: [{ id: 1, user_id: 2, venue_id: 1, branch_setting_version_id: null, start_time: '2020-12-14T01:30:00.000000Z', end_time: '2020-12-14T02:30:00.000000Z', created_at: '2020-12-14T22:25:02.000000Z', updated_at: '2020-12-14T22:25:02.000000Z' }, { id: 2, user_id: 2, venue_id: 1, branch_setting_version_id: null, start_time: '2020-12-14T02:30:00.000000Z', end_time: '2020-12-14T03:30:00.000000Z', created_at: '2020-12-14T22:25:03.000000Z', updated_at: '2020-12-14T22:25:03.000000Z' }, { id: 3, user_id: 2, venue_id: 1, branch_setting_version_id: null, start_time: '2020-12-14T04:30:00.000000Z', end_time: '2020-12-14T05:30:00.000000Z', created_at: '2020-12-14T22:25:04.000000Z', updated_at: '2020-12-14T22:25:04.000000Z' }], reserved: [] } }
                                properties:
                                    interval: { type: integer, example: 30 }
                                    timezone: { type: string, example: Asia/Hong_Kong }
                                    opening_time: { type: string, example: '08:00:00' }
                                    closing_time: { type: string, example: '21:00:00' }
                                    bookings: { type: object, example: { allow_times: [{ id: 1, venue_id: 1, start_time: '2020-12-14T04:00:00.000000Z', end_time: '2020-12-14T21:00:00.000000Z', day_of_week: 1, repeat: 1, created_at: '2020-12-14T22:25:00.000000Z', updated_at: '2020-12-14T22:25:00.000000Z' }, { id: 2, venue_id: 1, start_time: '2020-12-14T00:30:00.000000Z', end_time: '2020-12-14T22:00:00.000000Z', day_of_week: 2, repeat: 1, created_at: '2020-12-14T22:25:00.000000Z', updated_at: '2020-12-14T22:25:00.000000Z' }, { id: 3, venue_id: 1, start_time: '2020-12-14T00:30:00.000000Z', end_time: '2020-12-14T22:00:00.000000Z', day_of_week: 3, repeat: 1, created_at: '2020-12-14T22:25:01.000000Z', updated_at: '2020-12-14T22:25:01.000000Z' }, { id: 4, venue_id: 1, start_time: '2020-12-14T00:30:00.000000Z', end_time: '2020-12-14T22:00:00.000000Z', day_of_week: 4, repeat: 1, created_at: '2020-12-14T22:25:01.000000Z', updated_at: '2020-12-14T22:25:01.000000Z' }, { id: 5, venue_id: 1, start_time: '2020-12-14T00:30:00.000000Z', end_time: '2020-12-14T22:00:00.000000Z', day_of_week: 5, repeat: 1, created_at: '2020-12-14T22:25:02.000000Z', updated_at: '2020-12-14T22:25:02.000000Z' }], unavailable: { booked: [{ id: 1, user_id: 2, venue_id: 1, branch_setting_version_id: null, start_time: '2020-12-14T01:30:00.000000Z', end_time: '2020-12-14T02:30:00.000000Z', created_at: '2020-12-14T22:25:02.000000Z', updated_at: '2020-12-14T22:25:02.000000Z' }, { id: 2, user_id: 2, venue_id: 1, branch_setting_version_id: null, start_time: '2020-12-14T02:30:00.000000Z', end_time: '2020-12-14T03:30:00.000000Z', created_at: '2020-12-14T22:25:03.000000Z', updated_at: '2020-12-14T22:25:03.000000Z' }, { id: 3, user_id: 2, venue_id: 1, branch_setting_version_id: null, start_time: '2020-12-14T04:30:00.000000Z', end_time: '2020-12-14T05:30:00.000000Z', created_at: '2020-12-14T22:25:04.000000Z', updated_at: '2020-12-14T22:25:04.000000Z' }], reserved: [] } } }
            tags:
                - 'Venue Booking'
            security: []
